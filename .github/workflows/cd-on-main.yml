name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  call-test-compose:
    name: Run test Docker Compose Production
    uses: './.github/workflows/test-compose-production.yml'
    secrets:
      ENV_PROD_MOCK: ${{ secrets.ENV_PROD_MOCK }}
      SERVER_SSL_KEY_MOCK: ${{ secrets.SERVER_SSL_KEY_MOCK }}
      SERVER_SSL_PEM_MOCK: ${{ secrets.SERVER_SSL_PEM_MOCK }}

  build-and-push-image:
    name: Build and Push Docker Image
    needs: call-test-compose
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in DOcker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker buildx build --platform=linux/amd64 -t nguyenminhtri1808t/lapbee_ecommerce_backend:latest .

      - name: Push Docker Image
        run: |
          docker push nguyenminhtri1808t/lapbee_ecommerce_backend:latest

  check-prod-files-changed:
    name: Check if prod files changed
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch full history
        run: git fetch origin

      - name: Check changed prod files
        id: filter
        run: |
          CHANGED_FILES=$(git diff --name-only origin/deploy..origin/main)
          echo "Changed files:"
          echo "$CHANGED_FILES"

          if echo "$CHANGED_FILES" | grep -qE '^(nginx/|docker-compose\.prod\.yml|\.env\.prod\.example)$'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  create-pr-to-deploy:
    name: Create PR to deploy branch
    needs: check-prod-files-changed
    if: needs.check-prod-files-changed.outputs.changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Create new branch from deploy
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Fetch deploy branch explicitly
          git fetch origin deploy

          # Create a branch from origin/deploy
          git checkout -b temp/pr-for-deploy origin/deploy

          # Cherry-pick or restore specific prod-related files from main
          git checkout origin/main -- docker-compose.prod.yml .env.prod.example nginx/

          git add docker-compose.prod.yml .env.prod.example nginx/
          git commit -m "chore: sync prod config"

      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
          base: deploy
          branch: temp/pr-for-deploy
          title: 'Auto PR: Sync prod config from main'
          body: 'This PR was created automatically due to changes in nginx or docker-compose.prod.yml'
          commit-message: 'chore: sync prod config'
          delete-branch: true

  deploy-server:
    name: SSH Deploy to server
    needs: check-prod-files-changed
    if: needs.check-prod-files-changed.outputs.changed == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            cd app/Lapbee-Ecommerce-Backend
            docker compose -f docker-compose.prod.yml --env-file=.env.prod down
            docker pull nguyenminhtri1808t/lapbee_ecommerce_backend:latest
            docker compose -f docker-compose.prod.yml --env-file=.env.prod up -d
